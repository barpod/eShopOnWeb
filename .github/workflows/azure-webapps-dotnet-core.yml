
name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: eshoponweb-primary-app-service    # set this to the name of your Azure Web App
  SECONDARY_AZURE_WEBAPP_NAME: eshoponweb-secondary-app-service    # set this to the name of your Azure Web App
  PUBLIC_API_AZURE_WEBAPP_NAME: eshoponweb-public-api-app-service    # set this to the name of your Azure Web App
  ORDER_RESERVER_SERVICE_FUNCTION_APP: eshoponweb-orderitemreserver-function-app
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7.0'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build ./eShopOnWeb.sln --configuration Release
        
      - name: Test with dotnet
        run: dotnet test ./eShopOnWeb.sln --configuration Release

      - name: dotnet publish
        run: dotnet publish src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/publish/Web

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/publish/Web

      - name: dotnet publish
        run: dotnet publish src/PublicApi/PublicApi.csproj -c Release -o ${{env.DOTNET_ROOT}}/publish/PublicApi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: public-api
          path: ${{env.DOTNET_ROOT}}/publish/PublicApi

  deploy-web:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-primary-webapp.outputs.webapp-url }}
    steps:
      - name: "Login to Azure"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Primary Azure Web App
        id: deploy-to-primary-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      # - name: Deploy to Secondary Azure Web App
      #   id: deploy-to-secondary-webapp
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.SECONDARY_AZURE_WEBAPP_NAME }}
      #     package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # deploy-public-api:
  #   permissions:
  #     contents: none
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Development'
  #     url: ${{ steps.deploy-to-publicapi-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: "Login to Azure"
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: public-api

  #     - name: Deploy to PublicApi Azure Web App
  #       id: deploy-to-publicapi-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.PUBLIC_API_AZURE_WEBAPP_NAME }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  build-and-deploy-function-app:
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest
    environment: 'Development'
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: "Login to Azure"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup DotNet 6.0 Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash # For Linux, use bash
      run: |
        pushd './${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
        dotnet build src/OrderItemsReserver.Function/OrderItemsReserver.Function.csproj --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.ORDER_RESERVER_SERVICE_FUNCTION_APP }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/output'